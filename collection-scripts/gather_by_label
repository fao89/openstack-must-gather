#!/bin/bash

# load shared functions and data when not sourced
if [[ -z "$DIR_NAME" ]]; then
    CALLED=1
    DIR_NAME=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
    source "${DIR_NAME}/common.sh"
fi


get_job() {
    local NS="$1"
    mkdir -p "$NAMESPACE_PATH"/"$NS"/jobs
    JOBS=$(/usr/bin/oc -n "$NS" get job -l openstack.org/must-gather=true | awk '{print $1}')
    # shellcheck disable=SC2068
    for j in ${JOBS[@]}; do
        echo "Extracting Job: $j"
        run_bg /usr/bin/oc -n "$NS" get job "$j" --output yaml '>' "${NAMESPACE_PATH}/${NS}/jobs/${j}.yaml"
    done
}

get_pod() {
    local NS="$1"
    mkdir -p "$NAMESPACE_PATH"/"$NS"/pods
    PODS=$(/usr/bin/oc -n "$NS" get pod -l openstack.org/must-gather=true | awk '{print $1}')
    # shellcheck disable=SC2068
    for p in ${PODS[@]}; do
        echo "Extracting Pod: $p"
        run_bg /usr/bin/oc -n "$NS" get pod "$p" --output yaml '>' "${NAMESPACE_PATH}/${NS}/pods/${p}.yaml"
    done
}

get_cm() {
    local NS="$1"
    mkdir -p "$NAMESPACE_PATH"/"$NS"/configmaps
    CMS=$(/usr/bin/oc -n "$NS" get cm -l openstack.org/must-gather=true | awk '{print $1}')
    # shellcheck disable=SC2068
    for cm in ${CMS[@]}; do
        echo "Extracting ConfigMap: $cm"
        run_bg /usr/bin/oc -n "$NS" get cm "$cm" --output yaml '>' "${NAMESPACE_PATH}/${NS}/configmaps/${cm}.yaml"
    done
}

get_secret() {
    local NS="$1"
    mkdir -p "$NAMESPACE_PATH"/"$NS"/secrets
    SECRETS=$(/usr/bin/oc -n "$NS" get secrets -l openstack.org/must-gather=true | awk '{print $1}')
    # shellcheck disable=SC2068
    for s in ${SECRETS[@]}; do
        echo "Extracting Secret: $s"
        run_bg /usr/bin/oc -n "$NS" get secret "$s" --output yaml '>' "${NAMESPACE_PATH}/${NS}/secrets/${s}.yaml"
    done
}


if [[ $CALLED -eq 1 ]]; then
    NS="$1"
    if [ -z "$NS" ]; then
        echo "No namespace passed, using the default one"
        NS=openstack
    fi

    get_job "$NS"
    get_pod "$NS"
    get_cm "$NS"
    get_secret "$NS"

    wait_bg
fi
